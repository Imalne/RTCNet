# general settings
name: single_scale_RTCNet
model_type: SingleScaleModel
scale: 4
num_gpu: 4 # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: BSRGANTrainDataset
    type: BSRGANTrainDataset
    dataroot_gt: /home/qinrui03/Datasets/MyRealSR_up_wo_blur/train/HR
    io_backend:
      type: disk

    gt_size: 256
    use_resize_crop: true
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: General_Image_Valid
    type: PairedImageDataset
    dataroot_gt:  /home/qinrui03/Datasets/MyRealSR_up/valid/HR
    dataroot_lq:  /home/qinrui03/Datasets/MyRealSR_up/valid/LR/X4/
    io_backend:
      type: disk

# network structures
network_g:
  type: DualVQVAE1_ARCH
  in_channel: 3
  scale_factor: 4
  quant_params: [[8,512]]
  encoder_init_consistent: true

network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 3


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 150000]
    gamma: 0.5

  total_iter: 2000000
  warmup_iter: -1  # no warm up

  # losses
  l1_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  
  l2_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  latent_loss_opt:
    loss_weight: 1
    reduction: mean
  
  l_grad:
    type: GradientPriorLoss
    loss_weight: 0.1
  
  enc_constraint_opt:
    loss_weight: 1
  
  perceptual_opt:
    type: LPIPSLoss
    loss_weight: !!float 1.0 

  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1


# validation settings
val:
  val_freq: !!float 2e3
  save_img: false
  start_iter: 100000

  metrics:
    psnr: # metric name, can be arbitrary
      type: pyiqa_psnr
      crop_border: 4
      test_y_channel: true
      better: higher
    ssim:
      type: pyiqa_ssim
      crop_border: 4
      test_y_channel: true
      better: higher
    lpips:
      type: pyiqa_lpips
      better: lower

  pbar: false

# logging settings
logger:
  print_freq: 100
  visuak_freq: 500
  save_checkpoint_freq: !!float 2e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
